version: "3.8"
services:
  zookeeper:
    image: bitnami/zookeeper:3.8
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - kafka-net

  kafka:
    image: bitnami/kafka:3.5
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_LISTENERS=PLAINTEXT://0.0.0.0:9092
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092
      - KAFKA_AUTO_CREATE_TOPICS_ENABLE=true
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper
    networks:
      - kafka-net

  spark:
    image: bitnami/spark:3.5.0
    container_name: spark
    environment:
      - SPARK_MODE=standalone
      - SPARK_MASTER_HOST=spark
      - KAFKA_BROKER=localhost:9092
      - CASSANDRA_HOST=cassandra
      - SPARK_CHECKPOINT_LOCATION=/tmp/spark-checkpoint
    ports:
      - "8088:8080"
      - "7077:7077"
      - "8081:8081"
    volumes:
      - ./spark-checkpoints:/tmp/spark-checkpoint
    networks:
      - kafka-net
    depends_on:
      - kafka
      - cassandra

  ecommerce_producer:
    build:
      context: .
      dockerfile: Dockerfile.producer
    container_name: ecommerce_producer
    environment:
      - KAFKA_BROKER=localhost:9092
    depends_on:
      - kafka
    networks:
      - kafka-net

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.10.2
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    ports:
      - "9200:9200"
      - "9300:9300"
    networks:
      - kafka-net

  kibana:
    image: docker.elastic.co/kibana/kibana:8.10.2
    container_name: kibana
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    depends_on:
      - elasticsearch
    networks:
      - kafka-net

  sync_to_elasticsearch:
    build:
      context: .
      dockerfile: Dockerfile.sync
    container_name: sync_to_elasticsearch
    depends_on:
      - cassandra
      - kafka
      - elasticsearch
    networks:
      - kafka-net
    environment:
      - KAFKA_BROKER=localhost:9092
      - ELASTICSEARCH_HOST=http://elasticsearch:9200

  ecommerce_consumer:
    build:
      context: .
      dockerfile: Dockerfile.consumer
    container_name: ecommerce_consumer
    environment:
      - KAFKA_BROKER=localhost:9092
      - CASSANDRA_HOST=cassandra
    depends_on:
      - kafka
      - cassandra
    networks:
      - kafka-net

  cassandra:
    image: cassandra:4.1
    container_name: cassandra
    ports:
      - "9042:9042"
    networks:
      - kafka-net
    healthcheck:
      test: ["CMD", "nodetool", "status"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 40s
    volumes:
      - cassandra_data:/var/lib/cassandra

networks:
  kafka-net:
    driver: bridge

volumes:
  cassandra_data:
  spark-checkpoints:
